#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. /data/clash/clash.config

start_clash() {

    if [ "${ipv6}" = "false" ] ; then
        for net in /proc/sys/net/ipv6/conf/* ; do
            echo 0 > ${net}/accept_ra
            echo 1 > ${net}/disable_ipv6
        done
    else
        for net in /proc/sys/net/ipv6/conf/* ; do
            echo 1 > ${net}/accept_ra
            echo 0 > ${net}/disable_ipv6
        done
    fi

    pid=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${pid}/cmdline | grep -q clash) ; then
        echo "info: 检测到clash已启动,此次不启动." >> ${CFM_logs_file}
        exit 1
    fi
    
    sed -i '/^[  ]*$/d' ${template_file}
    cp -f ${template_file} ${temporary_config_file}.swp
    
    while [ $(du ${temporary_config_file}.swp | awk '{print $1}') = $(du ${template_file} | awk '{print $1}') ] ; do
        sleep 1
        cp -f ${template_file} ${temporary_config_file}.swp && echo "\n" >> ${temporary_config_file}.swp
        sed -n -E '/^proxies:$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
        sed -i '/^[  ]*$/d' ${temporary_config_file}.swp
    done

    mv -f ${temporary_config_file}.swp ${temporary_config_file} \
    && echo "" > ${CFM_logs_file} || echo "err:配置文件合并失败"

    if [ -f "${Clash_bin_path}" ] ; then
        mkdir -p ${Clash_run_path}
        chown ${Clash_user_group} ${Clash_bin_path}
        chmod ${Clash_permissions} ${Clash_bin_path}
        chown ${Clash_user_group} ${temporary_config_file}
        chmod 0644 ${temporary_config_file}
        setcap 'cap_net_admin,cap_net_raw+ep' ${Clash_bin_path}

        ${busybox_path} crontab -c ${Clash_run_path} -r
        touch ${Clash_run_path}/root
        chmod 0600 ${Clash_run_path}/root

        echo "${update_interval} ${scripts_dir}/clash.tool -s" > ${Clash_run_path}/root \
        && echo "info: 自动订阅定时已开启." >> ${CFM_logs_file}
        echo "*/1 * * * * ${scripts_dir}/clash.tool -k" >> ${Clash_run_path}/root \
        && echo "info: dns保持已打开." >> ${CFM_logs_file}

        sed -i '/^[  ]*$/d' ${CFM_logs_file}
        if [ "${filter_local}" = "true" ] ; then
            com="${scripts_dir}/clash.tool -m ; sleep 10 ;${scripts_dir}/clash.tool -m ; sleep 10; ${scripts_dir}/clash.tool -m ;sleep 10; ${scripts_dir}/clash.tool -m;sleep 10;${scripts_dir}/clash.tool -m ; sleep 10;${scripts_dir}/clash.tool -m"
            echo "*/1 * * * * ${com}" >> ${Clash_run_path}/root && echo "info: 自动绕过本地ip段已打开." >> ${CFM_logs_file}
        fi
    else
        echo "err: clash内核丢失." >> ${CFM_logs_file}
        exit 1
    fi

    if [ -f ${temporary_config_file} ] && [ -f ${Clash_geoip_file} ] ; then
        if $(${Clash_bin_path} -d ${Clash_data_dir} -t -f ${temporary_config_file} > /dev/null) ; then
            nohup ${Clash_bin_path} -d ${Clash_data_dir} -f ${temporary_config_file} > /dev/null 2>&1 &
            echo -n $! > ${Clash_pid_file}
            echo "info: clash内核已启动." >> ${CFM_logs_file}
        fi
    fi

    sleep 3

    if ! (${scripts_dir}/clash.tool -p) ; then
        kill -15 `cat ${Clash_pid_file}`
        rm -rf ${Clash_pid_file}
        echo "err: 端口未检测到,已停止clash内核以及后续逻辑." >> ${CFM_logs_file}
        exit 1
    fi
}

stop_clash() {
    kill -15 `cat ${Clash_pid_file}`
    rm -rf ${Clash_pid_file}
    echo "info: 停止clash内核." >> ${CFM_logs_file}
}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            start_clash
            ;;
        k)
            stop_clash
            ;;
        ?)
            echo ""
            ;;
    esac
done